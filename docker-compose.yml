services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    container_name: api-gateway
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    volumes:
      - ./api-gateway:/app
    restart: always
    networks:
      - api-network
    env_file:
      - .env

  user-service:
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    container_name: user-service
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    volumes:
      - ./user-service:/app
    restart: always
    networks:
      - user-network
      - api-network
    env_file:
      - .env

  db:
    image: mysql:8.0
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "mysql -u root ${DB_NAME} -e 'SELECT 1'"]
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - user-network

networks:
  api-network:
    name: api-network
  user-network:

volumes:
  db-data: